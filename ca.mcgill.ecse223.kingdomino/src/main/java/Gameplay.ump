namespace ca.mcgill.ecse223.kingdomino.model;

class Gameplay {

    gamestatus {
    	Starting{
    		startGame -> Initializing;
    	}
        Initializing {
            CreatingFirstDraft {
                entry/{shuffleDominoPile(); createNextDraft(); orderNextDraft();}
                draftReady -> /{revealNextDraft(); generateInitialPlayerOrder();} Initializing.SelectingFirstDomino;
            }
            SelectingFirstDomino {
            	nextPlayerFirstSelection [isValidSelection()]-> /{nextPlayerTurn();} Initializing.SelectingFirstDomino;
            	firstSelectionComplete [isCurrentPlayerTheLastInTurn()] -> Initializing.PlacingFirstDomino;
            	exit/{generatePlayerOrder();}
            }
            PlacingFirstDomino {
            
            }
        }
    }

    /*
     * Setter for test setup
     */

    public void setGamestatus(String status){
        switch (status) {
       	case "CreatingFirstDraft":
       	    gamestatus = Gamestatus.Initializing;
       	    gamestatusInitializing = GamestatusInitializing.CreatingFirstDraft;
       	    setGamestatusInitializing(GamestatusInitializing.CreatingFirstDraft);
       	    break;
       	case "SelectingFirstDomino":
       	// TODO add further cases here to set desired state
       	default:
       	    throw new RuntimeException("Invalid gamestatus string was provided: " + status);
       	}
    }

    /*
     * Guards
     */
    
    public boolean isCurrentPlayerTheLastInTurn() {
        // TODO: implement this
        return false;
    }
        
    public boolean isCurrentTurnTheLastInGame() {
        // TODO: implement this
        return false;
    }
    
    public boolean isValidSelection() {
        // TODO: implement this
        return false;
    }
    // You may need to add more guards here
        
        
    /*
     * Actions
     */
    
    public void shuffleDominoPile() {
        ca.mcgill.ecse223.kingdomino.controller.KingdominoController.doAction("ShuffleDominoPile");
    }
    
    public void createNextDraft() {
        ca.mcgill.ecse223.kingdomino.controller.KingdominoController.doAction("CreateNextDraft");
    }
    
    public void orderNextDraft() {
        ca.mcgill.ecse223.kingdomino.controller.KingdominoController.doAction("OrderNextDraft");
    }
    
    public void revealNextDraft() {
        ca.mcgill.ecse223.kingdomino.controller.KingdominoController.doAction("RevealNextDraft");
    }
    
    public void generateInitialPlayerOrder() {
        ca.mcgill.ecse223.kingdomino.controller.KingdominoController.doAction("GenerateInitialPlayerOrder");
    }
    
    public void nextPlayerTurn(){
    }
    
    public void generatePlayerOrder(){
    }
    // You may need to add more actions here
}
